#定义LOG输出级别、输出到控制台、文件
log4j.rootLogger = DEBUG,STDOUT

# 定义控制台 STDOUT appender
log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.Target=System.out

#定义日志输出目的地为控制台
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss}%m%n

## Global logging configuration
#log4j.rootLogger=DEBUG, stdout,ERR
## Console output...
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n
#log4j.appender.stdout.Encoding = UTF-8
#
##### RollingFileAppender: 限定单个文件大小，达到阀值输出到新文件 ####
#log4j.appender.ERR = org.apache.log4j.RollingFileAppender
## 指定输出文件路径
#log4j.appender.ERR.File = ../logs/abc.log
## 指定输出日志级别
#log4j.appender.ERR.Threshold = INFO
## 默认为true,意味着输出方式为追加，反之则为覆盖
#log4j.appender.ERR.Append = true
## 默认值是 true, 表示是否立即输出
#log4j.appender.ERR.ImmediateFlush = true
## 设置编码方式
#log4j.appender.ERR.Encoding = UTF-8
## 设置单个文件大小限制
#log4j.appender.ERR.MaxFileSize = 2MB
## 设置最大备份文件记录数
#log4j.appender.ERR.MaxBackupIndex = 20
## 日志输出布局
#log4j.appender.ERR.layout = org.apache.log4j.PatternLayout
## 如果日志输出布局为PatternLayout 自定义级别，需要使用ConversionPattern指定输出格式
#log4j.appender.ERR.layout.ConversionPattern =RFA-[framework] [%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p] -%c -%r -%l.%M(%L) | %m%n